[{"name":"app.R","content":"library(shiny)\r\nlibrary(shinydashboard)\r\nlibrary(flexdashboard)\r\nlibrary(dplyr)\r\n#library(knitr)\r\n#library(writexl)\r\nlibrary(DT)\r\n#library(rmarkdown)\r\nlibrary(stringr)\r\n\r\nreport <- read.csv(paste0('C:/Users/teresa.rasmussen/OneDrive - YouGov Services Limited/Documents/R SST scripts/QC reporting/Data/FULLReport_2023_09_01_to_2023_09_30.csv'), header = TRUE, sep = \",\")\r\nreport <- report[,-50,]\r\ncolnames(report)[14] <- 'GRYPHON_SCRIPTNAME'\r\n\r\nreport_newqc <- report %>% select(ACTIVE_STARTDATE,ACTIVE_ENDDATE,PANELID,COUNTRY_NAME,SURVEYID,SURVEYLINK,SURVEYNAME,CREATIONDATE,ENDFIELDDATE,\r\n                                  TARGETCOMPLETES,NETSUITEPROJECTCODE,POINTSDEFAULT,POINTSMAX,GRYPHON_SCRIPTNAME,FIRSTSTARTTIMESTAMP,\r\n                                  LATESTSTARTTIMESTAMP,COMPLETES,INCOMPLETES,QUOTAOUTS,ERROROUTS,SCREENOUTS,QCFAILS,BREAK_RATE,INCIDENCE_RATE,\r\n                                  QCFAIL_RATE,LOI_MEDIAN_COMP,LOI_Q3_COMP,LOI_MEDIAN_SCREEN,LOI_Q3_SCREEN,LOI_MEDIAN_QUOTA,LOI_Q3_QUOTA,\r\n                                  LOI_MEDIAN_ERR,LOI_Q3_ERR,LOI_MEDIAN_QCFAIL,LOI_Q3_QCFAIL,QC_SCORE,qc_1,qc_2,qc_3,qc_4,bad_1,bad_2,bad_3,bad_4,\r\n                                  bad_5,bad_6,bad_7,bad_8,TEAM,QC_VERSION,AUTHORED_LANGUAGE,USED_LOCALES,QSL_SIZE,VARIABLES,WIDGET_COUNT) %>%\r\n                            filter(!(is.na(QC_SCORE)))\r\n\r\n\r\n\r\npanelchoices <- c('1','4','10','13','71','72','73','74','118','133','152','156','158','162')\r\n\r\ndatacolchoices <- c(unique(colnames(report)))\r\n\r\ncss <- HTML(\r\n  \"#qcnew_table > .dataTables_wrapper.no-footer > .dataTables_scroll > .dataTables_scrollBody {\r\n  transform:rotateX(180deg);\r\n  }\r\n  #qcnew_table > .dataTables_wrapper.no-footer > .dataTables_scroll > .dataTables_scrollBody table{\r\n  transform:rotateX(180deg);\r\n   }\"\r\n)\r\n\r\n\r\n\r\nui <- dashboardPage(\r\n  dashboardHeader(title = \"QC Reporting\"),\r\n  dashboardSidebar(sidebarMenu(\r\n    menuItem(\"New QC Dashboard\", tabName = \"newqcdashboard\", icon = icon(\"dashboard\")),\r\n    menuItem(\"New QC Comments\", tabName = \"newqccomments\", icon = icon(\"th\")),\r\n    menuItem(\"Old QC Dashboard\", tabName = \"oldqcdashboard\", icon = icon(\"dashboard\")),\r\n    menuItem(\"Old QC Comments\", tabName = \"oldqccomments\", icon = icon(\"th\"))\r\n    ),\r\n    \r\n    selectInput(\"paneloptions\",\r\n                               \"Select panel(s)\",\r\n                               choices= c(\"US/Canada\"=panelchoices[1],\r\n                                          \"Germany\"=panelchoices[2],\r\n                                          \"MENA\"=panelchoices[3],\r\n                                          \"UK\"=panelchoices[4],\r\n                                          \"Denmark\"=panelchoices[5],\r\n                                          \"Finland\"=panelchoices[6],\r\n                                          \"Norway\"=panelchoices[7],\r\n                                          \"Sweden\"=panelchoices[8],\r\n                                          \"France\"=panelchoices[9],\r\n                                          \"South America\"=panelchoices[10],\r\n                                          \"Europe\"=panelchoices[11],\r\n                                          \"China\"=panelchoices[12],\r\n                                          \"Japan\"=panelchoices[13],\r\n                                          \"APAC\"=panelchoices[14]),\r\n                               selected = panelchoices[1],\r\n                               multiple = TRUE,\r\n                               width = '100%')\r\n  ),\r\n  dashboardBody(\r\n    tabItems(\r\n      # First tab content\r\n      tabItem(tabName = \"newqcdashboard\",\r\n              h2(\"New QC Reporting\"),\r\n        fluidRow(\r\n          box(gaugeOutput(\"qc_score_total\"), width = 12)\r\n          ),\r\n        fluidRow(\r\n          tags$head(tags$style(css)),\r\n          DT::dataTableOutput(\"qcnew_table\")\r\n          )\r\n      ),\r\n      \r\n      # Second tab content (add a , after the above \")\")\r\n      tabItem(tabName = \"newqccomments\",\r\n              h2(\"New QC Comments\")\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output) {\r\n  \r\n  show_data <- reactive({\r\n    \r\n    if (is.null(input$paneloptions)) {\r\n      return(NULL)\r\n    }\r\n    \r\n    report_newqc %>%\r\n      filter(report_newqc$PANELID %in% input$paneloptions)\r\n\r\n  })\r\n  \r\n  \r\n  \r\n  output$qc_score_total <- renderGauge({\r\n    qcscore <- report_newqc %>%\r\n      select(QC_SCORE) %>%\r\n      filter(report_newqc$PANELID %in% input$paneloptions) %>%\r\n      pull(QC_SCORE) %>%\r\n      mean()\r\n    \r\n    g <- gauge(qcscore, min = 1, max = 4, label = \"QC score\")\r\n    print(g)\r\n  })\r\n  \r\n  \r\n  output$qcnew_table <- DT::renderDataTable({\r\n    \r\n    target <- which(names(report_newqc) %in% \r\n                      c(\"ACTIVE_STARTDATE\",\"ACTIVE_ENDDATE\",\"CREATIONDATE\",\"POINTSDEFAULT\",\"POINTSMAX\",\"FIRSTSTARTTIMESTAMP\",\"LATESTSTARTTIMESTAMP\",\r\n                        \"INCOMPLETES\",\"QUOTAOUTS\",\"ERROROUTS\",\"SCREENOUTS\",\"QCFAILS\",\"LOI_Q3_COMP\",\"LOI_MEDIAN_SCREEN\",\"LOI_Q3_SCREEN\",\"LOI_MEDIAN_QUOTA\",\r\n                        \"LOI_Q3_QUOTA\",\"LOI_MEDIAN_ERR\",\"LOI_Q3_ERR\",\"LOI_MEDIAN_QCFAIL\",\"LOI_Q3_QCFAIL\",\"qc_1\",\"qc_2\",\"qc_3\",\"qc_4\",\"bad_1\",\"bad_2\",\"bad_3\",\"bad_4\",\"bad_5\",\"bad_6\",\"bad_7\",\"bad_8\",\"QC_VERSION\",\"VARIABLES\",\"WIDGET_COUNT\")) - 1\r\n    \r\n    DT::datatable(\r\n      show_data(),\r\n      rownames = FALSE,\r\n      #filter = \"top\",\r\n      #editable = 'cell',\r\n      extensions = c('Buttons'),\r\n      options = list(\r\n        columnDefs = list(list(visible = FALSE, targets = target)),\r\n        scrollX = TRUE,\r\n        dom = 'Blfrtip',\r\n        buttons = list(\r\n          \r\n          # insert buttons with copy and print\r\n          # colvis includes the button to select and view only certain columns in the output table\r\n          # from https://rstudio.github.io/DT/extensions.html \r\n          I('colvis'), 'copy', 'print',\r\n          \r\n          # code for the first dropdown download button\r\n          # this will download only the current page only (depends on the number of rows selected in the lengthMenu)\r\n          # using modifier = list(page = \"current\")\r\n          # only the columns visible will be downloaded using the columns:\":visible\" option from:\r\n          # https://stackoverflow.com/questions/72317260/how-to-download-only-the-selected-columns-in-a-dataframe-using-colvis-from-dt-in/72317607#72317607\r\n          list(\r\n            extend = 'collection',\r\n            buttons = list(\r\n              list(extend = \"csv\", filename = \"page\",exportOptions = list(\r\n                columns = \":visible\",modifier = list(page = \"current\"))\r\n              ),\r\n              list(extend = 'excel', filename = \"page\", title = NULL, \r\n                   exportOptions = list(columns = \":visible\",modifier = list(page = \"current\")))),\r\n            text = 'Download current page'),\r\n          \r\n          # code for the  second dropdown download button\r\n          # this will download the entire dataset using modifier = list(page = \"all\")\r\n          list(\r\n            extend = 'collection',\r\n            buttons = list(\r\n              list(extend = \"csv\", filename = \"data\",exportOptions = list(\r\n                columns = \":visible\",modifier = list(page = \"all\"))\r\n              ),\r\n              list(extend = 'excel', filename = \"data\", title = NULL, \r\n                   exportOptions = list(columns = \":visible\",modifier = list(page = \"all\")))),\r\n            text = 'Download all data')\r\n          \r\n        ),\r\n        # add the option to display more rows as a length menu\r\n        lengthMenu = list(c(10,25,50,-1),\r\n                          c('10','25','50','All'))\r\n      ),\r\n      class = \"display\")\r\n  })\r\n}\r\n\r\nshinyApp(ui, server)","type":"text"}]
